"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./store/redux/lich/lich-slice.js":
/*!****************************************!*\
  !*** ./store/redux/lich/lich-slice.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LichActions\": function() { return /* binding */ LichActions; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nvar initLich = {\n    arrLich: [],\n    arrExp: [\n        {\n            cell: 1,\n            label: \"Mon\"\n        },\n        {\n            cell: 2,\n            label: \"Tue\"\n        },\n        {\n            cell: 3,\n            label: \"Wed\"\n        },\n        {\n            cell: 4,\n            label: \"Thu\"\n        },\n        {\n            cell: 5,\n            label: \"Fri\"\n        },\n        {\n            cell: 6,\n            label: \"Sat\"\n        },\n        {\n            cell: 7,\n            label: \"Sun\"\n        }, \n    ]\n};\n//Callback để lấy tên weekday cho công tác tạo lịc\nvar getWeekday = function(val) {\n    if (val % 7 === 1) {\n        return \"Mon\";\n    }\n    if (val % 7 === 2) {\n        return \"Tue\";\n    }\n    if (val % 7 === 3) {\n        return \"Wed\";\n    }\n    if (val % 7 === 4) {\n        return \"Thu\";\n    }\n    if (val % 7 === 5) {\n        return \"Fri\";\n    }\n    if (val % 7 === 6) {\n        return \"Sat\";\n    }\n    if (val % 7 === 0) {\n        return \"Sun\";\n    }\n};\nvar LichSlice = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_0__.createSlice)({\n    name: \"Lịch Slice\",\n    initialState: initLich,\n    reducers: {\n        createInitCalendar: function createInitCalendar(state) {\n            if (state.arrLich.length === 0) {\n                for(var i = 1; i < 43; i++){\n                    state.arrLich.push({\n                        idCell: \"cell-\".concat(i),\n                        date: \"\",\n                        weekday: getWeekday(i),\n                        disable: false,\n                        singleClass: false,\n                        groupClass: false,\n                        bothClass: false,\n                        arrValue: []\n                    });\n                }\n            } else {\n                return;\n            }\n        },\n        createFinalCalendar: function createFinalCalendar(state, action) {\n            if (state.arrLich.length > 0) {\n                //Des data submit lên\n                var _payload = action.payload, firstWeekday = _payload.firstWeekday, lastDayNum = _payload.lastDayNum, monthYear = _payload.monthYear;\n                //Đầu tiên là chạy disabled hết các ô\n                state.arrLich.forEach(function(cv) {\n                    return cv.disable = true;\n                });\n                //Dựa vào tên của ngày 1 trong tháng, xác định thứ --> rồi trả về stt cell\n                var firstCellNum = state.arrExp.find(function(cv) {\n                    return cv.label === firstWeekday;\n                }).cell;\n                var lastCellNum = firstCellNum + lastDayNum;\n                //Chạy vòng lặp thứ 1 để kích hoạt ngày\n                for(var i = firstCellNum; i < lastCellNum; i++){\n                    //Xác định thằng này trong mảng\n                    var curDayInArr = state.arrLich[i - 1];\n                    curDayInArr.disable = false;\n                }\n                //Lọc lại mảng disable false ~ mảng ngày thực trong tháng\n                var arrTrueDates = state.arrLich.filter(function(date) {\n                    return date.disable === false;\n                });\n                //Chạy vòng lặp thứ 2 để đánh số cho ngày\n                for(var i1 = 1; i1 < lastDayNum + 1; i1++){\n                    arrTrueDates[i1 - 1].date = i1;\n                }\n            }\n        },\n        addDataToMultiDates: function addDataToMultiDates(state, action) {\n            //Des data cần từ submit lên\n            var _payload = action.payload, arrSelectedDates = _payload.arrSelectedDates, typeClass = _payload.typeClass;\n            //Kiểm tra\n            if (arrSelectedDates.length === 0 || typeClass.trim().length === 0) {\n                return;\n            }\n            //Map về mảng labels tương ứng\n            var arrSelectedLabels = arrSelectedDates.map(function(cv) {\n                return cv.val;\n            });\n            console.log(arrSelectedLabels);\n            //Chạy vòng lặp xử lý thêm data\n            arrSelectedLabels.forEach(function(label) {\n                //Lọc lại mảng những ngày trùng weekday với label và không bị dis\n                var arrWeekday = state.arrLich.filter(function(date) {\n                    return date.weekday === label && date.disable === false;\n                });\n                //Đẩy lớp vào cái đã\n                arrWeekday.forEach(function(date) {\n                    var arrValueExits = _toConsumableArray(date.arrValue);\n                    arrValueExits.push(typeClass);\n                    date.arrValue = arrValueExits;\n                });\n                //Tiến hành kích hoạt và thêm data vào những ngày này\n                arrWeekday.forEach(function(date) {\n                    //Xử lý biến stye cho ngày\n                    if (typeClass === \"single\") {\n                        date.singleClass = true;\n                    }\n                    if (typeClass === \"group\") {\n                        date.groupClass = true;\n                    }\n                    if (date.singleClass && date.groupClass) {\n                        date.bothClass = true;\n                    }\n                });\n            });\n        },\n        delDataMultiDates: function delDataMultiDates(state, action) {\n            if (action.payload.length === 0) {\n                return;\n            }\n            //Lấy về mảng label\n            var arrSelectedLabels = action.payload.map(function(cv) {\n                return cv.val;\n            });\n            //Chạy lặp cho từng label để tiến hành xóa dât của những ngày có cùng label\n            arrSelectedLabels.forEach(function(label) {\n                //Lọc lại mảng ngày có weekday trùng với label\n                var arrWeekday = state.arrLich.filter(function(date) {\n                    return date.weekday === label && date.disable === false;\n                });\n                //Clear data cho mảng lọc này\n                arrWeekday.forEach(function(date) {\n                    date.singleClass = false;\n                    date.groupClass = false;\n                    date.bothClass = false;\n                    date.arrValue = [];\n                });\n            });\n        },\n        clearAllDatesDate: function clearAllDatesDate(state) {\n            state.arrLich.forEach(function(date) {\n                date.singleClass = false;\n                date.groupClass = false;\n                date.bothClass = false;\n                date.arrValue = [];\n            });\n        },\n        addSingleDate: function addSingleDate(state, action) {\n            //Des data cần\n            var _payload = action.payload, idCell = _payload.idCell, typeClass = _payload.typeClass;\n            if (typeClass === \"none\") {\n                return;\n            }\n            //Tìm kiếm cell dựa trên id đẻ eit\n            var dateMatched = state.arrLich.find(function(date) {\n                return date.idCell === idCell;\n            });\n            if (dateMatched) {\n                dateMatched.arrValue.push(typeClass);\n            }\n        },\n        minusSingleDate: function minusSingleDate(state, action) {\n            //Des data cần\n            var _payload = action.payload, idCell = _payload.idCell, typeClass = _payload.typeClass;\n            if (typeClass === \"none\") {\n                return;\n            }\n            console.log('run');\n            //Tìm kiếm cell dựa trên id đẻ eit\n            var dateMatched = state.arrLich.find(function(date) {\n                return date.idCell === idCell;\n            });\n            if (dateMatched) {\n                //Tìm kiếm xem typeClass đã tồn tại chưa, nếu có mới trừ không thì return\n                var indexTypeClassExist = dateMatched.arrValue.findIndex(function(cv) {\n                    return cv === typeClass;\n                });\n                if (indexTypeClassExist) {\n                    dateMatched.arrValue.splice(indexTypeClassExist, 1);\n                } else {\n                    return;\n                }\n            }\n        }\n    }\n});\nvar LichActions = LichSlice.actions;\n/* harmony default export */ __webpack_exports__[\"default\"] = (LichSlice.reducer);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./store/redux/lich/lich-slice.js\n");

/***/ })

});