"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/hoc-phi-hoc-sinh/tinh-phi-thang-moi",{

/***/ "./support/hoc-phi-hoc-sinh/hphs-uti.js":
/*!**********************************************!*\
  !*** ./support/hoc-phi-hoc-sinh/hphs-uti.js ***!
  \**********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getFirstLastDateOfMonth\": function() { return /* binding */ getFirstLastDateOfMonth; },\n/* harmony export */   \"getColumnWeekdayData\": function() { return /* binding */ getColumnWeekdayData; },\n/* harmony export */   \"countSingleGroupDates\": function() { return /* binding */ countSingleGroupDates; },\n/* harmony export */   \"calcMoneyMonthStu\": function() { return /* binding */ calcMoneyMonthStu; }\n/* harmony export */ });\n//Func lấy ngày đầu và ngày cuối của tháng từ đối tượng tháng năm\nvar getFirstLastDateOfMonth = function(objMonthYear) {\n    var formatDate = \"\".concat(objMonthYear.year, \"-\").concat(objMonthYear.month, \"-01\");\n    if (objMonthYear.month.toString().length === 1) {\n        formatDate = \"\".concat(objMonthYear.year, \"-0\").concat(objMonthYear.month, \"-01\");\n    }\n    var date = new Date(formatDate);\n    var firstDay = new Date(date.getFullYear(), date.getMonth(), 1);\n    var lastDay = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n    var firstWeekday = firstDay.toLocaleString(\"en-US\", {\n        weekday: \"short\"\n    });\n    var lastDayNum = lastDay.getDate();\n    return {\n        firstWeekday: firstWeekday,\n        lastDayNum: lastDayNum\n    };\n};\n//Func lọc lại một cột thứ có được điểm danh hay không\nvar getColumnWeekdayData = function(arrLich, weekdayshort) {\n    //Lọc lại mảng ngày theo weekday cung cấp\n    var arrWeekday = arrLich.filter(function(date) {\n        return date.weekday === weekdayshort;\n    });\n    //Lây về phần tử đầu tiên --> lấy mảng arrValue của nó --> đếm lạo điểm danh trong đó\n    var arrValue = arrWeekday[1].arrValue;\n    //Tiến hành đếm\n    var countSingle = 0;\n    var countGroup = 0;\n    var countTotal = 0;\n    if (arrValue.length > 0) {\n        var arrValueSingle = arrValue.filter(function(cv) {\n            return cv === \"single\";\n        });\n        countSingle = arrValueSingle.length;\n        var arrValueGroup = arrValue.filter(function(cv) {\n            return cv === \"group\";\n        });\n        countGroup = arrValueGroup.length;\n        countTotal = countGroup + countSingle;\n    }\n    if (countSingle !== 0 || countGroup !== 0) {\n        return {\n            weekday: weekdayshort,\n            countSingle: countSingle,\n            countGroup: countGroup,\n            countTotal: countTotal\n        };\n    }\n};\n//Func xử lý đếm ngày học cá nhân và nhóm trong lịch\nvar countSingleGroupDates = function(arrLich) {\n    //Đầu tiên là lọc lại mảng cell không bị dis\n    var arrLichWithoutDis = arrLich.filter(function(cell) {\n        return cell.disable === false;\n    });\n    //Tiếp đến là lọc lại mảng cell mà cell đó có arrValue không rỗng\n    var arrLichWithArrValue = arrLichWithoutDis.filter(function(cell) {\n        return cell.arrValue.length > 0;\n    });\n    //Map về mảng chứa các mảng arrValue\n    var arrOfArrValues = arrLichWithArrValue.map(function(cv) {\n        return cv.arrValue;\n    });\n    //Đẩy các giá trị của từng cell vào mảng chứa\n    var arrResult = [];\n    arrOfArrValues.forEach(function(arr) {\n        return arr.forEach(function(val) {\n            return arrResult.push(val);\n        });\n    });\n    //Lọc lại mảng sing và mảng group để đếm\n    var arrSingleVal = arrResult.filter(function(cv) {\n        return cv === \"single\";\n    });\n    var arrGroupVal = arrResult.filter(function(cv) {\n        return cv === \"group\";\n    });\n    //Trả lại két quả\n    return {\n        totalSingle: arrSingleVal.length,\n        totalGroup: arrGroupVal.length\n    };\n};\n//Func xử lý tính tiền cá nhân, tiền nhớm ,tiền tổng\nvar calcMoneyMonthStu = function(arrStudents, idStu, totalSingle, totalGroup, arrDiemDanhCaNhanThangTruoc) {\n    //Xử lý data tháng trước\n    var totalPreMonthOffDates = 0;\n    var totalPreMonthReplaceDates = 0;\n    var totalPreMonthPlusDates = 0;\n    if (arrDiemDanhCaNhanThangTruoc.length > 0) {\n        var arrOffDates = arrDiemDanhCaNhanThangTruoc.filter(function(date) {\n            return date.typeSingleCheck === 'nghi';\n        });\n        var arrReplaceDates = arrDiemDanhCaNhanThangTruoc.filter(function(date) {\n            return date.typeSingleCheck === 'bu';\n        });\n        var arrPlusDates = arrDiemDanhCaNhanThangTruoc.filter(function(date) {\n            return date.typeSingleCheck === 'tang';\n        });\n        totalPreMonthOffDates = arrOffDates.length;\n        totalPreMonthReplaceDates = arrReplaceDates.length;\n        totalPreMonthPlusDates = arrPlusDates.length;\n    }\n    //Tìm học sinh trong mảng học sinh và lấy props tiền lương cá nhânn và tháng\n    var stuMatched = arrStudents.find(function(stu) {\n        return stu._id === idStu;\n    });\n    var totalMoneySingle = 0;\n    var totalMoneyGroup = 0;\n    var totalMoneyMonth = 0;\n    var totalPreMonthMoneyOff = 0;\n    var totalPreMonthMoneyPlus = 0;\n    var totalPreMonthMoneyReplace = 0;\n    if (stuMatched) {\n        var singleFee = stuMatched.singleFee;\n        var groupFee = stuMatched.groupFee;\n        totalMoneySingle = singleFee * totalSingle;\n        totalMoneyGroup = groupFee * totalGroup;\n        totalPreMonthMoneyOff = singleFee * totalPreMonthOffDates;\n        totalPreMonthMoneyPlus = singleFee * totalPreMonthPlusDates;\n        totalPreMonthMoneyReplace = singleFee * totalPreMonthReplaceDates;\n        totalMoneyMonth = totalMoneyGroup + totalMoneySingle - totalPreMonthMoneyOff + totalPreMonthMoneyPlus + totalPreMonthMoneyReplace;\n    }\n    return {\n        totalMoneySingle: totalMoneySingle,\n        totalMoneyGroup: totalMoneyGroup,\n        totalMoneyMonth: totalMoneyMonth\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./support/hoc-phi-hoc-sinh/hphs-uti.js\n");

/***/ })

});